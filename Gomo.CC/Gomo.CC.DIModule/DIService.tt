<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ Assembly Name="EnvDTE" #>
<#@ Assembly Name="EnvDTE80" #>
<#@ Assembly Name="Microsoft.Build" #>
<#@ Assembly Name="Microsoft.CSharp" #>
<#@ Assembly Name="Microsoft.VisualStudio.TextManager.Interop" #>
<#@ Assembly Name="Microsoft.VisualStudio.TextTemplating.Interfaces.10.0" #>
<#@ Assembly Name="System" #>
<#@ Assembly Name="System.ComponentModel.DataAnnotations" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Design" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ Assembly Name="System.Xml" #>
<#@ Assembly Name="System.Xml.Linq" #>
<#@ Assembly Name="VSLangProj110" #>

<#@ import namespace="EnvDTE" #>
<#@ import namespace="EnvDTE80" #>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Threading.Tasks" #>
<#@ import namespace="VSLangProj110" #>

<#@ include file="..\Gomo.CC.Common\T4\VSHelper.t4" #>
<#@ output extension=".cs" #>

<#
	string strnamespace="Gomo.CC.DIModule";
		  //主模型的專案名稱
	string modelprjname="Gomo.CC.Model";

	//string strdbcontext="GomoCCDBContext";
    VShelper vshelper = new VShelper(this.Host);
	IEnumerable<EnvDTE.Project> lstprj=vshelper.GetAllProjectsRecursiveFromSolution(vshelper.DTE);
	EnvDTE.Project modelprj=null;
	foreach (var item in lstprj)
    {
		if(item.Name.Contains(modelprjname))
        {
			modelprj=item;
		    //WriteLine(item.Name);
        }
    }

	//class 的頭文件
	WriteLine(GomoClassHelper.Head(strnamespace));
	List<EnvDTE.CodeClass> listclass=vshelper.GetClassesOf(modelprj);

	//dimodule
	WriteLine("	public class ServiceModule : Autofac.Module");
	WriteLine("	{");
	WriteLine("		protected override void Load(ContainerBuilder builder)");
	WriteLine("		{");
    foreach(var cls in listclass)
    {
        if(cls.Name.Contains("Context")==true) continue;
		string strdal=cls.Name.ToLower()+"dal";
		//WriteLine("class : " + cls.Name);
        StringBuilder sb= new StringBuilder();
		sb.AppendLine("			builder.RegisterType<"+cls.Name+"Service>()");
		sb.AppendLine("				.As<I"+cls.Name+"Service>().InstancePerLifetimeScope();");
		WriteLine(sb.ToString());
    }
	
	//dimodeule
	WriteLine("		}");
	WriteLine("	}");
	//write foot
	WriteLine(GomoClassHelper.foot());
#>

<#+
public static class GomoClassHelper
{
	public static string Head(string _namspace)
    {
		StringBuilder sb= new StringBuilder();
		sb.AppendLine("using Autofac;");
		sb.AppendLine("using Gomo.CC.BLL;");
		sb.AppendLine("using Gomo.CC.IBLL;");
		//sb.AppendLine("using Gomo.CC.Model;");
		sb.AppendLine("namespace "+_namspace);
		sb.AppendLine("{");
		return sb.ToString();
    }
	public static string foot()
    {
		StringBuilder sb= new StringBuilder();
		sb.AppendLine("}");
		return sb.ToString();
    }
}
#>

