<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="EnvDTE"#>
<#@ assembly name="EnvDTE80" #>
<#@ Assembly Name="Microsoft.Build" #>
<#@ Assembly Name="Microsoft.CSharp" #>
<#@ Assembly Name="Microsoft.VisualStudio.ComponentModelHost" #>
<#@ Assembly Name="Microsoft.VisualStudio.CoreUtility" #>
<#@ Assembly Name="Microsoft.VisualStudio.OLE.Interop" #>
<#@ Assembly Name="Microsoft.VisualStudio.Shell.10.0" #>
<#@ Assembly Name="Microsoft.VisualStudio.Shell.Immutable.10.0" #>
<#@ Assembly Name="Microsoft.VisualStudio.Shell.Interop" #>
<#@ Assembly Name="Microsoft.VisualStudio.Shell.Interop.10.0" #>
<#@ Assembly Name="Microsoft.VisualStudio.TextManager.Interop" #>
<#@ Assembly Name="Microsoft.VisualStudio.TextTemplating.Interfaces.10.0" #>
<#@ Assembly Name="System" #>
<#@ Assembly Name="System.ComponentModel.Composition" #>
<#@ Assembly Name="System.ComponentModel.DataAnnotations" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Data" #>
<#@ Assembly Name="System.Design" #>
<#@ Assembly Name="System.Runtime.Serialization" #>
<#@ Assembly Name="System.Xml" #>
<#@ Assembly Name="System.Xml.Linq" #>
<#@ Assembly Name="WindowsBase" #>
<#@ Assembly Name="VSLangProj110" #>

<#@ import namespace="EnvDTE" #>
<#@ import namespace="EnvDTE80" #>
<#@ import namespace="Microsoft.VisualStudio.Shell" #>
<#@ import namespace="Microsoft.VisualStudio.Shell.Interop" #>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Threading.Tasks" #>
<#@ import namespace="VSLangProj110" #>
<#@ include file="..\Gomo.CC.Common\T4\VSHelper.t4" #>
<#@ output extension=".cs" #>

<#
	string strnamespace="Gomo.CC.IDAL";
	//主模型的專案名稱
	string modelprjname="Gomo.CC.Model";
	VShelper vshelper = new VShelper(this.Host);
	IEnumerable<EnvDTE.Project> lstprj=vshelper.GetAllProjectsRecursiveFromSolution(vshelper.DTE);
	EnvDTE.Project modelprj=null;
	foreach (var item in lstprj)
    {
		if(item.Name.Contains(modelprjname))
        {
			modelprj=item;
		    //WriteLine(item.Name);
        }
    }
    //class 的頭文件
	WriteLine(GomoClassHelper.Head(strnamespace));
	List<EnvDTE.CodeClass> listclass=vshelper.GetClassesOf(modelprj);
	foreach(var cls in listclass)
	{
		//WriteLine(item.Name);
		if(cls.Name.Contains("Context")==true) continue;
		string strdal=cls.Name.ToLower()+"Dal";
		//WriteLine("class : " + cls.Name);
        StringBuilder sb= new StringBuilder();
		sb.Append("	public partial interface I"+cls.Name+"Dal : ");
		sb.AppendLine("IBaseDal<"+cls.Name+">");
		sb.AppendLine("	{");
		sb.AppendLine("	}");
		WriteLine(sb.ToString());
	}
	//write foot
	WriteLine(GomoClassHelper.foot());
#>
//這是自動產生
<#+
/*
using Gomo.CC.Model;
using System;
using System.Collections.Generic;
using System.Text;

namespace Gomo.CC.IDAL
{
    public partial interface IBlogDal : IBaseDal<Blog>
    {
    }
}
 */
public static class GomoClassHelper
{
	public static string Head(string _namspace)
    {
		StringBuilder sb= new StringBuilder();
		sb.AppendLine("using Gomo.CC.Model;");
		sb.AppendLine("namespace "+_namspace);
		sb.AppendLine("{");
		return sb.ToString();
    }
	public static string foot()
    {
		StringBuilder sb= new StringBuilder();
		sb.AppendLine("}");
		return sb.ToString();
    }
}
#>

